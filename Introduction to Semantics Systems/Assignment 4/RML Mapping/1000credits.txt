@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix map: <http://mapping.example.com/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix ex: <http://semantics.id/ns/example/film#> .


_:TriplesMap1 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "1000_credits.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.[*]"
  ];
  rr:subjectMap [
    rr:template "http://semantics.id/ns/example/film#Actor_{cast[*].id}";
    rr:class ex:Actor;
  ];
  rr:predicateObjectMap [
    rr:predicate ex:fullName;
    rr:objectMap [
        rml:reference "cast[*].name" ;
        rr:datatype xsd:string ;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:gender;
    rr:objectMap [
        rml:reference "cast[*].gender" ;
        rr:datatype xsd:string ;
    ];
  ];
.

_:TriplesMap2 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "1000_credits.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.[*]"
  ];
  rr:subjectMap [
    rr:template "http://semantics.id/ns/example/film#Cast_{cast[*].cast_id}";
    rr:class ex:Cast;
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasCastActor;
    rr:objectMap [
        rr:template "http://semantics.id/ns/example/film#Actor_{cast[*].id}";
		rr:class ex:Actor;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasCastCharacter;
    rr:objectMap [
        rml:reference "cast[*].character" ;
        rr:datatype xsd:string ;
    ];
  ];
.


_:TriplesMap3 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "1000_credits.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.[*]"
  ];
   rr:subjectMap [
    rr:template "http://semantics.id/ns/example/film#writer_{crew[?(@.department=='Writing')].id}";
	rr:class ex:ScriptWriter;
  ];
  rr:predicateObjectMap [
    rr:predicate ex:fullName;
    rr:objectMap [
        rml:reference "crew[?(@.department=='Writing')].name" ;
        rr:datatype xsd:string ;
    ];
  ];
   rr:predicateObjectMap [
    rr:predicate ex:gender;
    rr:objectMap [
        rml:reference "crew[?(@.department=='Writing')].gender" ;
        rr:datatype xsd:string ;
    ];
  ];
.

_:TriplesMap4 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "1000_credits.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.[*]"
  ];
   rr:subjectMap [
    rr:template "http://semantics.id/ns/example/film#director_{crew[?(@.department=='Directing')].id}";
	rr:class ex:Director;
  ];
   rr:predicateObjectMap [
    rr:predicate ex:gender;
    rr:objectMap [
        rml:reference "crew[?(@.department=='Directing')].gender" ;
        rr:datatype xsd:string ;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:fullName;
    rr:objectMap [
        rml:reference "crew[?(@.department=='Directing')].name" ;
        rr:datatype xsd:string ;
    ];
  ];
.


_:TriplesMap5 a rr:TriplesMap;
  rml:logicalSource [
    rml:source "1000_credits.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.[*]"
  ];
  rr:subjectMap [
    rr:template "http://semantics.id/ns/example/film#film_{id}";
    rr:class ex:Film;
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasActor;
    rr:objectMap [
      rr:template "http://semantics.id/ns/example/film#Actor_{cast[*].id}";
      rr:class ex:Actor;
    ];
  ];
   rr:predicateObjectMap [
    rr:predicate ex:hasCast;
    rr:objectMap [
    rr:template "http://semantics.id/ns/example/film#Cast_{cast[*].cast_id}";
    rr:class ex:Cast;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasScriptWriter;
    rr:objectMap [
		rr:template "http://semantics.id/ns/example/film#writer_{crew[?(@.department=='Writing')].id}";
		rr:class ex:ScriptWriter;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasDirector;
    rr:objectMap [
		rr:template "http://semantics.id/ns/example/film#director_{crew[?(@.department=='Directing')].id}";
		rr:class ex:Director;
    ];
  ];
.



